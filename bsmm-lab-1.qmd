---
title: "BSMM-lab-1"
subtitle: "BSMM 8740 Fall 2023"
author: "Rajasree B"
date: "2023-09-11"
format: html
editor: visual
self-contained: true
---

## Setup

Load packages and data:

```{r load-pkg-data}
#| message: false
# install the package 'Lahman'
install.packages('Lahman')
# load the package
library(Lahman)
```

## Exercises

### Exercise 1

```{r glimpse-data}
#good practise to lable your code chunks this way
#function to see a summary of the dataset
dplyr::glimpse(Teams)

```

The `Teams` dataset has \_**3015**\_ observations (rows) and \_**48**\_ variables(columns).

### Exercise 2

```{r filter-select}
library(dplyr)
#pipe operator (%>%) from the dplyr package is not recognized, therefore make sure to load the package 
mets <- Teams  %>% 
  dplyr::filter(teamID == "NYN")
#selects rows where the "teamID" column is equal to "NYN"
my_mets <- mets %>% 
  dplyr::filter(yearID >= 2004 & yearID <= 2012)
# Specify the years for which you want W/L records
my_mets %>% 
dplyr::select(yearID, W, L)
# Select the relevant columns

```

### Exercise 3

```{r expected winning percentage}

# Selecting specific columns from the "Teams" data frame to make mets_ben
mets_ben <- Teams |>
  dplyr::select(teamID,yearID,R,RA,G,W,L) |>
  
# Filtering the data to include only New York Mets ("NYN") and years 2004 to 2012
  dplyr::filter(teamID == "NYN" & yearID %in% 2004:2012)
mets_ben

dplyr::glimpse(mets_ben)
# Renaming the "R" column to "RS" for clarity
mets_ben <- mets_ben |>
  dplyr::rename(RS = R)    # new name = old name
mets_ben

```

### Exercise 4

```{r mutate(actual winning percentage)}

# Calculating WPct using the formula 1 / (1 + (RA / RS)^2)
mets_ben <- mets_ben |>
  dplyr::mutate(WPct = 1/(1+(RA/RS)^2))
mets_ben

# Calculating Expected Wins (W_hat) based on WPct and games played (G)
mets_ben <- mets_ben |>
  dplyr::mutate(W_hat = WPct*G)
mets_ben

```

### Exercise 5

1.  better than expected is calculated by counting the seasons where the actual wins (W) were greater than the expected wins (W_hat).

2.  Worse than expected is calculated by counting the seasons where the actual wins (W) were less than the expected wins (W_hat).

Mets were better than expected in three of these seasons, and worse than expected in the other six.

### Exercise 6

```{r sorting rows}

# Sorting the rows of the data frame in descending order of WPct (highest to lowest)
dplyr::arrange(mets_ben,desc(WPct))
```

### Exercise 7

```{r relative performance}
# Calculating the difference between the actual Winning Percentage (WPct) and the expected Winning Percentage (W_hat)

# Arranging the data frame in descending order based on the calculated difference (Diff)

# Sortinging in descending order will rank the rows by how much they exceed the expected performance.
mets_ben <- mets_ben %>%
mets_ben %>% 
  dplyr::mutate(Diff = WPct-W_hat) |>
  dplyr::arrange(desc(Diff))
```

### Exercise 8

```{r Summarizing the Mets performance}
mets_ben |>
  dplyr::summarize(
    num_years = n(), #total number of years in mets_ben dataframe
    total_W = sum(W), #total number of wins (W) across all years
    total_L = sum(L), #total number of losses (L) across all years
    total_WPct = sum(WPct), #sum of all Winning Percentages (WPct) across all years
    sum_resid = sum(WPct-W_hat) #sum of the differences between WPct and W_hat
  )

```

In these nine years, the Mets had a combined record of 728 wins and 730 losses, for an overall winning percentage of 4.559514.

### Exercise 10

```{r Discretizing the years into three chunks}
#Discretize the years into three chunks: one for each of the three general managers under whom Ben worked
mets_ben <- mets_ben %>% 
  dplyr::mutate(
    gm = ifelse(
      yearID == 2004, "Jim Duquette", 
      ifelse(
        yearID >= 2005 & yearID <=2010, "Omar Minaya",
        ifelse(yearID >=2011 & yearID <= 2012, "Sandy Alderson",NA) #if none of the conditions match, the "gm" value is set to NA
      )
    )
  )
mets_ben
```

```{r using case_when}
#Alternatively using case_when

mets_ben <- mets_ben |>
  dplyr::mutate(
    gm = dplyr::case_when(
      yearID == 2004 ~ "Jim Duquette", 
      yearID >= 2005 & yearID <=2010 ~ "Omar Minaya", 
      yearID >= 2011 & yearID <= 2012 ~ "Sandy Alderson",
      TRUE ~ NA_character_
    )
  )
mets_ben

```

### Exercise 11

```{r using group_by()}

mets_ben_grouped <- mets_ben %>%

#Grouping data by gm variable
  group_by(gm) %>%
  summarise(
    num_years = n(),
    total_W = sum(W),
    total_L = sum(L),
    avg_WPct = mean(WPct),
    total_Diff = sum(WPct-W_hat)
  )

mets_ben_grouped
```
